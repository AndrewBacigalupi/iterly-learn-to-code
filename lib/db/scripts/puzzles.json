[
  {
    "title": "Count Vowels in a String",
    "description": "Count the number of vowels in a given string.",
    "difficulty": "easy",
    "tags": ["strings", "counting"],
    "example_input": "Supercalifragilisticexpialidocious",
    "explanation": "There are 3 a’s, 2 e’s, 7 i’s, 2 o’s, 2 u’s, and 0 y’s. 3 + 2 + 7 + 2 + 2 + 0 = 16.",
    "answer": "16",
    "hint": "Use a loop or comprehension to check each character.",
    "real_input": "vowels.txt",
    "number": 1
  },
  {
    "title": "Find First Period Index",
    "description": "Find the index of the first period in a given string.",
    "difficulty": "easy",
    "tags": ["strings", "indexing"],
    "example_input": "Hello. How are you?",
    "explanation": "The first period occurs after 5 characters.",
    "answer": "5",
    "hint": "Use .index('.') or loop through the string.",
    "real_input": "period.txt",
    "number": 2
  },
  {
    "title": "Sum First N Integers",
    "description": "Find the sum of the first n positive integers.",
    "difficulty": "easy",
    "tags": ["math", "loops"],
    "example_input": "5",
    "explanation": "1 + 2 + 3 + 4 + 5 = 15",
    "answer": "15",
    "hint": "Use a loop or the formula n(n+1)/2.",
    "real_input": "100",
    "number": 3
  },
  {
    "title": "Sum First N Even Integers",
    "description": "Find the sum of the first n even positive integers.",
    "difficulty": "easy",
    "tags": ["math", "loops"],
    "example_input": "4",
    "explanation": "2 + 4 + 6 + 8 = 20",
    "answer": "20",
    "hint": "Even numbers can be represented as 2 * i.",
    "real_input": "10",
    "number": 4
  },
  {
    "title": "Count Numbers Divisible by 5",
    "description": "Count the number of integers in a file that are divisible by 5.",
    "difficulty": "medium",
    "tags": ["files", "divisibility"],
    "example_input": "10 15 20 22 25",
    "explanation": "10, 15, 20, and 25 are divisible by 5. Total: 4.",
    "answer": "4",
    "hint": "Loop through the file and use % 5.",
    "real_input": "divisibles1.txt",
    "number": 5
  },
  {
    "title": "Sum Numbers Divisible by 2 and 3",
    "description": "Sum the numbers in a file that are divisible by both 2 and 3.",
    "difficulty": "medium",
    "tags": ["files", "math", "and"],
    "example_input": "6 9 12 15 18",
    "explanation": "6, 12, 18 are divisible by both. 6+12+18 = 36.",
    "answer": "36",
    "hint": "Use num % 2 == 0 and num % 3 == 0.",
    "real_input": "divisibles2.txt",
    "number": 7
  },
  {
    "title": "Sum Numbers Divisible by 2 or 3",
    "description": "Sum the numbers in a file divisible by 2 OR 3.",
    "difficulty": "medium",
    "tags": ["files", "math", "or"],
    "example_input": "4 6 9 10 11",
    "explanation": "4, 6, 9, 10 are valid. Total = 29.",
    "answer": "29",
    "hint": "Use num % 2 == 0 or num % 3 == 0.",
    "real_input": "divisibles2.txt",
    "number": 8
  },
  {
    "title": "Complex Divisibility Rule",
    "description": "Sum numbers divisible by (5 and 7) OR (3 and 4).",
    "difficulty": "hard",
    "tags": ["files", "compound logic"],
    "example_input": "35 84 21 12 60",
    "explanation": "35 and 84 valid (5&7), 12 (3&4). Total = 131.",
    "answer": "131",
    "hint": "Use compound if logic.",
    "real_input": "divisibles3.txt",
    "number": 9
  },
  {
    "title": "Count 'Hello' (Case Sensitive)",
    "description": "Count number of 'Hello' in a text file (case-sensitive).",
    "difficulty": "easy",
    "tags": ["files", "strings"],
    "example_input": "Hello hi Hello hello",
    "explanation": "Two exact 'Hello' matches.",
    "answer": "2",
    "hint": "Use str.count('Hello').",
    "real_input": "hello-sensitive.txt",
    "number": 10
  },
  {
    "title": "Count 'Hello' (Case Insensitive)",
    "description": "Count number of 'Hello' in a file (case-insensitive).",
    "difficulty": "easy",
    "tags": ["files", "strings"],
    "example_input": "Hello hi hello HELLO",
    "explanation": "All variations count. Total: 3.",
    "answer": "3",
    "hint": "Convert to lowercase before count.",
    "real_input": "hello-insensitive.txt",
    "number": 11
  },
  {
    "title": "List Operations",
    "description": "Given a list of integers, perform certain operations and return nth element.",
    "difficulty": "medium",
    "tags": ["lists", "operations"],
    "example_input": "[1, 2, 3, 5], operations: remove last, insert 4 at index 3, insert 6 at front",
    "explanation": "Final list: [6,1,2,3,4]. nth element depends on n.",
    "answer": "Value at nth index",
    "hint": "Use list.pop(), list.insert(), list.append().",
    "real_input": "data/list_ops.txt",
    "number": 12
  },
  {
    "title": "Remove Duplicates from File",
    "description": "Remove duplicates and sum remaining integers.",
    "difficulty": "easy",
    "tags": ["lists", "sets"],
    "example_input": "[1,2,2,3,3,3]",
    "explanation": "Unique: 1,2,3 → sum = 6",
    "answer": "6",
    "hint": "Use set() to remove duplicates.",
    "real_input": "remove-dup.txt",
    "number": 13
  },
  {
    "title": "Least Common Multiple",
    "description": "Find the least common multiple (LCM) of two integers.",
    "difficulty": "medium",
    "tags": ["math", "lcm"],
    "example_input": "4 6",
    "explanation": "LCM(4,6) = 12",
    "answer": "12",
    "hint": "Use formula: lcm(a,b) = abs(a*b)/gcd(a,b)",
    "real_input": "8 12",
    "number": 14
  },
  {
    "title": "Index-wise List Concatenation",
    "description": "Concatenate two lists index-wise and reverse each string.",
    "difficulty": "medium",
    "tags": ["lists", "strings"],
    "example_input": "[\"You\", \"corr\"], [\"'re\", \"ect\"]",
    "explanation": "Concat: [\"You're\", \"correct\"] → Reversed: [\"er'uoY\", \"tcerroc\"]",
    "answer": "[\"er'uoY\", \"tcerroc\"]",
    "hint": "Use zip() and slicing.",
    "real_input": "data/concat_reverse.txt",
    "number": 15
  },
  {
    "title": "Leap Years in File",
    "description": "Count how many leap years are listed in a file.",
    "difficulty": "medium",
    "tags": ["dates", "files"],
    "example_input": "2000 2004 2100 2200",
    "explanation": "2000 and 2004 are leap years.",
    "answer": "2",
    "hint": "Divisible by 4, not 100 unless also 400.",
    "real_input": "leap-years.txt",
    "number": 16
  },
  {
    "title": "Alternating Pi Series",
    "description": "Compute the sum of the alternating series: ((−1)^(k+1))/(2k−1), k=1 to 1,000,000, times 4.",
    "difficulty": "hard",
    "tags": ["math", "series"],
    "example_input": "n = 10",
    "explanation": "The series converges toward π.",
    "answer": "Approximation of π",
    "hint": "Use a loop and keep adding terms.",
    "real_input": "n = 1000000",
    "number": 17
  },
  {
    "title": "Sum of Primes in Range",
    "description": "Find the sum of all prime numbers from m to n.",
    "difficulty": "medium",
    "tags": ["math", "primes", "functions"],
    "example_input": "10 20",
    "explanation": "Primes: 11, 13, 17, 19 → sum = 60",
    "answer": "60",
    "hint": "Define is_prime(n) and loop from m to n.",
    "real_input": "2 100",
    "number": 18
  }
]
